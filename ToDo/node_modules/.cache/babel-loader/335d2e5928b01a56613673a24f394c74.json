{"ast":null,"code":"import _slicedToArray from \"F:\\\\ReactEND\\\\forhooksproject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\ReactEND\\\\forhooksproject\\\\src\\\\App.js\";\nimport React, { useEffect } from 'react';\nimport style from \"./App.module.css\";\nimport TodoList from './TodoList/TodoList';\nimport Context from './context';\n\nconst App = () => {\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=6').then(response => response.json()).then(todos => console.log(json));\n  }, []);\n  let todos = [{\n    id: 1,\n    name: \"Make America great again!\",\n    completed: false\n  }, {\n    id: 2,\n    name: \"Eat Nuts\",\n    completed: true\n  }, {\n    id: 3,\n    name: \"Play Minecraft\",\n    completed: false\n  }];\n\n  let _React$useState = React.useState(todos),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      Todos = _React$useState2[0],\n      SetTodos = _React$useState2[1];\n\n  let OnChange = id => {\n    SetTodos(Todos.map(td => {\n      if (td.id === id) {\n        td.completed = !td.completed;\n      }\n\n      console.log(td.completed);\n      return td;\n    }));\n  };\n\n  let removeItem = id => {\n    SetTodos(Todos.filter(td => td.id !== id));\n  };\n\n  let addTodo = text => {\n    SetTodos(todos.concat([{\n      name: text,\n      id: Date.now(),\n      completed: false\n    }]));\n  };\n\n  return React.createElement(Context.Provider, {\n    value: {\n      removeItem,\n      Todos\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: style.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(TodoList, {\n    addTodo: addTodo,\n    todo: Todos,\n    OnToggle: OnChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["F:/ReactEND/forhooksproject/src/App.js"],"names":["React","useEffect","style","TodoList","Context","App","fetch","then","response","json","todos","console","log","id","name","completed","useState","Todos","SetTodos","OnChange","map","td","removeItem","filter","addTodo","text","concat","Date","now","wrapper"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEhBJ,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAAC,qDAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYH,IAAZ,CAFf;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,MAAIC,KAAK,GAAG,CACV;AAACG,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAG,2BAAf;AAA4CC,IAAAA,SAAS,EAAG;AAAxD,GADU,EAEV;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAG,UAAf;AAA2BC,IAAAA,SAAS,EAAG;AAAvC,GAFU,EAGV;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAG,gBAAf;AAAiCC,IAAAA,SAAS,EAAG;AAA7C,GAHU,CAAZ;;AARgB,wBAcQf,KAAK,CAACgB,QAAN,CAAeN,KAAf,CAdR;AAAA;AAAA,MAcXO,KAdW;AAAA,MAcJC,QAdI;;AAgBhB,MAAIC,QAAQ,GAAIN,EAAD,IAAQ;AACrBK,IAAAA,QAAQ,CACND,KAAK,CAACG,GAAN,CAAWC,EAAD,IAAQ;AAChB,UAAGA,EAAE,CAACR,EAAH,KAAUA,EAAb,EAAgB;AACdQ,QAAAA,EAAE,CAACN,SAAH,GAAe,CAACM,EAAE,CAACN,SAAnB;AACD;;AACDJ,MAAAA,OAAO,CAACC,GAAR,CAAYS,EAAE,CAACN,SAAf;AACA,aAAOM,EAAP;AACD,KAND,CADM,CAAR;AASD,GAVD;;AAYA,MAAIC,UAAU,GAAIT,EAAD,IAAO;AACtBK,IAAAA,QAAQ,CACND,KAAK,CAACM,MAAN,CAAaF,EAAE,IAAIA,EAAE,CAACR,EAAH,KAAUA,EAA7B,CADM,CAAR;AAGD,GAJD;;AAMA,MAAIW,OAAO,GAAIC,IAAD,IAAU;AACtBP,IAAAA,QAAQ,CAACR,KAAK,CAACgB,MAAN,CAAa,CAAC;AACrBZ,MAAAA,IAAI,EAAGW,IADc;AAErBZ,MAAAA,EAAE,EAAEc,IAAI,CAACC,GAAL,EAFiB;AAGrBb,MAAAA,SAAS,EAAG;AAHS,KAAD,CAAb,CAAD,CAAR;AAKD,GAND;;AASA,SACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAACO,MAAAA,UAAD;AAAaL,MAAAA;AAAb,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAEf,KAAK,CAAC2B,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEL,OAAnB;AAA4B,IAAA,IAAI,EAAEP,KAAlC;AAAyC,IAAA,QAAQ,EAAEE,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADA,CADF;AASD,CApDD;;AAsDA,eAAed,GAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport style from \"./App.module.css\"\nimport TodoList from './TodoList/TodoList';\nimport Context from './context'\n\nconst App = () => {\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=6')\n    .then(response => response.json())\n    .then(todos => console.log(json))\n  }, [])\n\n  let todos = [\n    {id: 1, name : \"Make America great again!\", completed : false},\n    {id: 2, name : \"Eat Nuts\", completed : true},\n    {id: 3, name : \"Play Minecraft\", completed : false}\n  ]\n\n  let [Todos, SetTodos] = React.useState(todos)\n\n  let OnChange = (id) => {\n    SetTodos(\n      Todos.map((td) => {\n        if(td.id === id){\n          td.completed = !td.completed;\n        }\n        console.log(td.completed);\n        return td;\n      })\n    );\n  }\n\n  let removeItem = (id) =>{\n    SetTodos(\n      Todos.filter(td => td.id !== id  )\n      )\n  }\n\n  let addTodo = (text) => {\n    SetTodos(todos.concat([{\n      name : text,\n      id: Date.now(),\n      completed : false\n    }]))\n  }\n\n\n  return (\n    <Context.Provider value={{removeItem, Todos}}>\n    <div className={style.wrapper}>\n    \n      <TodoList addTodo={addTodo} todo={Todos} OnToggle={OnChange}/>\n      \n    </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}