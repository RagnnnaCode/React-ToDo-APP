{"ast":null,"code":"import _slicedToArray from \"F:\\\\ReactEND\\\\forhooksproject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\ReactEND\\\\forhooksproject\\\\src\\\\App.js\";\nimport React from 'react';\nimport style from \"./App.module.css\";\nimport TodoList from './TodoList/TodoList';\nimport Context from './context';\n\nconst App = () => {\n  let todos = [{\n    id: 1,\n    name: \"Make America great again!\",\n    completed: false\n  }, {\n    id: 2,\n    name: \"Eat Nuts\",\n    completed: true\n  }, {\n    id: 3,\n    name: \"Play Minecraft\",\n    completed: false\n  }];\n\n  let _React$useState = React.useState(todos),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      Todos = _React$useState2[0],\n      SetTodos = _React$useState2[1];\n\n  let OnChange = id => {\n    SetTodos(Todos.map(td => {\n      if (td.id === id) {\n        td.completed = !td.completed;\n      }\n\n      console.log(td.completed);\n      return td;\n    }));\n  };\n\n  let removeItem = id => {\n    SetTodos(Todos.filter(td => td.id !== id));\n  };\n\n  return React.createElement(Context.Provider, {\n    value: {\n      removeItem\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: style.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, Todos.length ? React.createElement(TodoList, {\n    todo: Todos,\n    OnToggle: OnChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }) : React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"You have no ToDos\")));\n};\n\nexport default App;","map":{"version":3,"sources":["F:/ReactEND/forhooksproject/src/App.js"],"names":["React","style","TodoList","Context","App","todos","id","name","completed","useState","Todos","SetTodos","OnChange","map","td","console","log","removeItem","filter","wrapper","length"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAGhB,MAAIC,KAAK,GAAG,CACV;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAG,2BAAf;AAA4CC,IAAAA,SAAS,EAAG;AAAxD,GADU,EAEV;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAG,UAAf;AAA2BC,IAAAA,SAAS,EAAG;AAAvC,GAFU,EAGV;AAACF,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAG,gBAAf;AAAiCC,IAAAA,SAAS,EAAG;AAA7C,GAHU,CAAZ;;AAHgB,wBASQR,KAAK,CAACS,QAAN,CAAeJ,KAAf,CATR;AAAA;AAAA,MASXK,KATW;AAAA,MASJC,QATI;;AAWhB,MAAIC,QAAQ,GAAIN,EAAD,IAAQ;AACrBK,IAAAA,QAAQ,CACND,KAAK,CAACG,GAAN,CAAWC,EAAD,IAAQ;AAChB,UAAGA,EAAE,CAACR,EAAH,KAAUA,EAAb,EAAgB;AACdQ,QAAAA,EAAE,CAACN,SAAH,GAAe,CAACM,EAAE,CAACN,SAAnB;AACD;;AACDO,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAE,CAACN,SAAf;AACA,aAAOM,EAAP;AACD,KAND,CADM,CAAR;AASD,GAVD;;AAYA,MAAIG,UAAU,GAAIX,EAAD,IAAO;AACtBK,IAAAA,QAAQ,CACND,KAAK,CAACQ,MAAN,CAAaJ,EAAE,IAAIA,EAAE,CAACR,EAAH,KAAUA,EAA7B,CADM,CAAR;AAGD,GAJD;;AAMA,SACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAACW,MAAAA;AAAD,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAEhB,KAAK,CAACkB,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,KAAK,CAACU,MAAN,GAAe,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEV,KAAhB;AAAuB,IAAA,QAAQ,EAAEE,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAf,GAA8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADjE,CADA,CADF;AAQD,CArCD;;AAuCA,eAAeR,GAAf","sourcesContent":["import React from 'react';\nimport style from \"./App.module.css\"\nimport TodoList from './TodoList/TodoList';\nimport Context from './context'\n\nconst App = () => {\n\n  \n  let todos = [\n    {id: 1, name : \"Make America great again!\", completed : false},\n    {id: 2, name : \"Eat Nuts\", completed : true},\n    {id: 3, name : \"Play Minecraft\", completed : false}\n  ]\n\n  let [Todos, SetTodos] = React.useState(todos)\n\n  let OnChange = (id) => {\n    SetTodos(\n      Todos.map((td) => {\n        if(td.id === id){\n          td.completed = !td.completed;\n        }\n        console.log(td.completed);\n        return td;\n      })\n    );\n  }\n\n  let removeItem = (id) =>{\n    SetTodos(\n      Todos.filter(td => td.id !== id  )\n      )\n  }\n\n  return (\n    <Context.Provider value={{removeItem}}>\n    <div className={style.wrapper}>\n      {Todos.length ? <TodoList todo={Todos} OnToggle={OnChange}/> : <h1>You have no ToDos</h1>}\n      \n    </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}