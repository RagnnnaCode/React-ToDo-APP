{"ast":null,"code":"var _jsxFileName = \"F:\\\\ReactEND\\\\forhooksproject\\\\src\\\\TodoList\\\\TodoList.jsx\";\nimport React, { useContext } from 'react';\nimport TodoItem from './TodoItem';\nimport style from \"./Todo.module.css\";\nimport Context from '../context';\nimport AddTodo from './AddTodo';\nimport Loader from '../Loader';\n\nconst TodoList = props => {\n  const _useContext = useContext(Context),\n        Todos = _useContext.Todos,\n        loading = _useContext.loading;\n\n  let todosAM = props.todo.map((td, i) => {\n    return React.createElement(TodoItem, {\n      completed: td.completed,\n      OnToggle: props.OnToggle,\n      title: td.title,\n      key: td.id,\n      id: td.id,\n      i: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    });\n  });\n  return React.createElement(\"div\", {\n    className: style.List,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, Todos.length || loading ? React.createElement(\"h1\", {\n    className: style.TDtrue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"ToDo List\") : React.createElement(\"h1\", {\n    className: style.TDfalse,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"You have no ToDo's ;)\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(AddTodo, {\n    onCreate: props.addTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), loading ? React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }) : todosAM));\n};\n\nexport default TodoList;","map":{"version":3,"sources":["F:/ReactEND/forhooksproject/src/TodoList/TodoList.jsx"],"names":["React","useContext","TodoItem","style","Context","AddTodo","Loader","TodoList","props","Todos","loading","todosAM","todo","map","td","i","completed","OnToggle","title","id","List","length","TDtrue","TDfalse","addTodo"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA,sBAECP,UAAU,CAACG,OAAD,CAFX;AAAA,QAEjBK,KAFiB,eAEjBA,KAFiB;AAAA,QAEVC,OAFU,eAEVA,OAFU;;AAIxB,MAAIC,OAAO,GAAGH,KAAK,CAACI,IAAN,CAAWC,GAAX,CAAe,CAACC,EAAD,EAAKC,CAAL,KAAW;AACpC,WAAO,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAED,EAAE,CAACE,SAAxB;AAAmC,MAAA,QAAQ,EAAER,KAAK,CAACS,QAAnD;AAA6D,MAAA,KAAK,EAAEH,EAAE,CAACI,KAAvE;AAA8E,MAAA,GAAG,EAAEJ,EAAE,CAACK,EAAtF;AAA0F,MAAA,EAAE,EAAEL,EAAE,CAACK,EAAjG;AAAqG,MAAA,CAAC,EAAEJ,CAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFa,CAAd;AAGA,SACI;AAAK,IAAA,SAAS,EAAEZ,KAAK,CAACiB,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGDX,KAAK,CAACY,MAAN,IAAgBX,OAAhB,GACA;AAAI,IAAA,SAAS,EAAEP,KAAK,CAACmB,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,GAGA;AAAI,IAAA,SAAS,EAAEnB,KAAK,CAACoB,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BANC,EAQD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAEf,KAAK,CAACgB,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAL,CARC,EASCd,OAAO,GAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACHC,OAVL,CAFH,CADJ;AAiBH,CAxBD;;AAyBA,eAAeJ,QAAf","sourcesContent":["import React, {useContext} from 'react'\r\nimport TodoItem from './TodoItem'\r\nimport style from \"./Todo.module.css\"\r\nimport Context from '../context'\r\nimport AddTodo from './AddTodo'\r\nimport Loader from '../Loader'\r\n\r\n\r\nconst TodoList = (props) => {\r\n   \r\n    const {Todos, loading} = useContext(Context);\r\n    \r\n    let todosAM = props.todo.map((td, i) => {\r\n        return <TodoItem completed={td.completed} OnToggle={props.OnToggle} title={td.title} key={td.id} id={td.id} i={i}/>\r\n    })\r\n    return (\r\n        <div className={style.List} >\r\n            \r\n           <ul>\r\n              \r\n          {\r\n          Todos.length || loading ? \r\n          <h1 className={style.TDtrue}>ToDo List</h1> \r\n          : \r\n          <h1 className={style.TDfalse}>You have no ToDo's ;)</h1>\r\n          }\r\n          <div><AddTodo onCreate={props.addTodo}/></div>\r\n          { loading ? <Loader/>\r\n              : todosAM  }\r\n           </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}