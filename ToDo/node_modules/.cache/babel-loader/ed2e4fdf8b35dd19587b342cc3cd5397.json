{"ast":null,"code":"import _slicedToArray from \"F:\\\\ReactEND\\\\forhooksproject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\ReactEND\\\\forhooksproject\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport style from \"./App.module.css\";\nimport TodoList from './TodoList/TodoList';\nimport Context from './context';\n\nconst App = () => {\n  let todos = [];\n\n  let _React$useState = React.useState(todos),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      Todos = _React$useState2[0],\n      SetTodos = _React$useState2[1];\n\n  let _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      loading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=6').then(response => response.json()).then(todosJS => {\n      setTimeout(() => {\n        SetTodos(todosJS);\n        setLoading(false);\n      }, 1000);\n    });\n  }, []);\n  console.log(Todos);\n\n  let OnChange = id => {\n    SetTodos(Todos.map(td => {\n      if (td.id === id) {\n        td.completed = !td.completed;\n      }\n\n      console.log(td.completed);\n      return td;\n    }));\n  };\n\n  let removeItem = id => {\n    SetTodos(Todos.filter(td => td.id !== id));\n  };\n\n  let addTodo = text => {\n    SetTodos(Todos.concat([{\n      title: text,\n      id: Date.now(),\n      completed: false\n    }]));\n  };\n\n  let ChangeText = value => {\n    Todos.title = value;\n  };\n\n  return React.createElement(Context.Provider, {\n    value: {\n      removeItem,\n      Todos,\n      loading,\n      ChangeText\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: style.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(TodoList, {\n    addTodo: addTodo,\n    todo: Todos,\n    OnToggle: OnChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["F:/ReactEND/forhooksproject/src/App.js"],"names":["React","useEffect","useState","style","TodoList","Context","App","todos","Todos","SetTodos","loading","setLoading","fetch","then","response","json","todosJS","setTimeout","console","log","OnChange","id","map","td","completed","removeItem","filter","addTodo","text","concat","title","Date","now","ChangeText","value","wrapper"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAIhB,MAAIC,KAAK,GAAG,EAAZ;;AAJgB,wBAMQP,KAAK,CAACE,QAAN,CAAeK,KAAf,CANR;AAAA;AAAA,MAMXC,KANW;AAAA,MAMJC,QANI;;AAAA,yBAQYT,KAAK,CAACE,QAAN,CAAe,IAAf,CARZ;AAAA;AAAA,MAQXQ,OARW;AAAA,MAQFC,UARE;;AAUhBV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,KAAK,CAAC,qDAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,OAAO,IAAI;AACfC,MAAAA,UAAU,CAAC,MAAM;AACfR,QAAAA,QAAQ,CAACO,OAAD,CAAR;AACAL,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAHS,EAGP,IAHO,CAAV;AAKD,KARD;AASD,GAVQ,EAUN,EAVM,CAAT;AAWAO,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;;AAEA,MAAIY,QAAQ,GAAIC,EAAD,IAAQ;AACrBZ,IAAAA,QAAQ,CACND,KAAK,CAACc,GAAN,CAAWC,EAAD,IAAQ;AAChB,UAAGA,EAAE,CAACF,EAAH,KAAUA,EAAb,EAAgB;AACdE,QAAAA,EAAE,CAACC,SAAH,GAAe,CAACD,EAAE,CAACC,SAAnB;AACD;;AACDN,MAAAA,OAAO,CAACC,GAAR,CAAYI,EAAE,CAACC,SAAf;AACA,aAAOD,EAAP;AACD,KAND,CADM,CAAR;AASD,GAVD;;AAYA,MAAIE,UAAU,GAAIJ,EAAD,IAAO;AACtBZ,IAAAA,QAAQ,CACND,KAAK,CAACkB,MAAN,CAAaH,EAAE,IAAIA,EAAE,CAACF,EAAH,KAAUA,EAA7B,CADM,CAAR;AAGD,GAJD;;AAMA,MAAIM,OAAO,GAAIC,IAAD,IAAU;AACtBnB,IAAAA,QAAQ,CAACD,KAAK,CAACqB,MAAN,CAAa,CAAC;AACrBC,MAAAA,KAAK,EAAGF,IADa;AAErBP,MAAAA,EAAE,EAAEU,IAAI,CAACC,GAAL,EAFiB;AAGrBR,MAAAA,SAAS,EAAG;AAHS,KAAD,CAAb,CAAD,CAAR;AAKD,GAND;;AAOA,MAAIS,UAAU,GAAIC,KAAD,IAAW;AAC1B1B,IAAAA,KAAK,CAACsB,KAAN,GAAcI,KAAd;AACD,GAFD;;AAKA,SACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAACT,MAAAA,UAAD;AAAajB,MAAAA,KAAb;AAAoBE,MAAAA,OAApB;AAA6BuB,MAAAA;AAA7B,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAE9B,KAAK,CAACgC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEG,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAER,OAAnB;AAA4B,IAAA,IAAI,EAAEnB,KAAlC;AAAyC,IAAA,QAAQ,EAAEY,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CADA,CADF;AASD,CA9DD;;AAgEA,eAAed,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport style from \"./App.module.css\"\nimport TodoList from './TodoList/TodoList';\nimport Context from './context'\n\n\nconst App = () => {\n\n  \n\n  let todos = []\n\n  let [Todos, SetTodos] = React.useState(todos)\n\n  let [loading, setLoading] = React.useState(true)\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=6')\n    .then(response => response.json())\n    .then(todosJS => {\n      setTimeout(() => {\n        SetTodos(todosJS)\n        setLoading(false)\n      }, 1000);\n      \n    })\n  }, [])\n  console.log(Todos);\n\n  let OnChange = (id) => {\n    SetTodos(\n      Todos.map((td) => {\n        if(td.id === id){\n          td.completed = !td.completed;\n        }\n        console.log(td.completed);\n        return td;\n      })\n    );\n  }\n\n  let removeItem = (id) =>{\n    SetTodos(\n      Todos.filter(td => td.id !== id  )\n      )\n  }\n\n  let addTodo = (text) => {\n    SetTodos(Todos.concat([{\n      title : text,\n      id: Date.now(),\n      completed : false\n    }]))\n  }\n  let ChangeText = (value) => {\n    Todos.title = value;\n  }\n\n\n  return (\n    <Context.Provider value={{removeItem, Todos, loading, ChangeText}}>\n    <div className={style.wrapper}>\n    \n       <TodoList addTodo={addTodo} todo={Todos} OnToggle={OnChange}/>\n      \n    </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}