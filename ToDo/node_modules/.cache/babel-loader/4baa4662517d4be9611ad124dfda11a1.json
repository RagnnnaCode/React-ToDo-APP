{"ast":null,"code":"import _slicedToArray from \"F:\\\\ReactEND\\\\forhooksproject\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\ReactEND\\\\forhooksproject\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport style from \"./App.module.css\";\nimport TodoList from './TodoList/TodoList';\nimport Context from './context';\n\nconst App = () => {\n  let todos = [];\n\n  let _React$useState = React.useState(todos),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      Todos = _React$useState2[0],\n      SetTodos = _React$useState2[1];\n\n  let _useEffect = useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=6').then(response => response.json()).then(todosJS => {\n      setTimeout(() => {\n        SetTodos(todosJS);\n      }, 2000);\n    });\n  }, []),\n      _useEffect2 = _slicedToArray(_useEffect, 1),\n      loading = _useEffect2[0];\n\n  let OnChange = id => {\n    SetTodos(Todos.map(td => {\n      if (td.id === id) {\n        td.completed = !td.completed;\n      }\n\n      console.log(td.completed);\n      return td;\n    }));\n  };\n\n  let removeItem = id => {\n    SetTodos(Todos.filter(td => td.id !== id));\n  };\n\n  let addTodo = text => {\n    SetTodos(todos.concat([{\n      name: text,\n      id: Date.now(),\n      completed: false\n    }]));\n  };\n\n  return React.createElement(Context.Provider, {\n    value: {\n      removeItem,\n      Todos\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: style.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(TodoList, {\n    addTodo: addTodo,\n    todo: Todos,\n    OnToggle: OnChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["F:/ReactEND/forhooksproject/src/App.js"],"names":["React","useEffect","useState","style","TodoList","Context","App","todos","Todos","SetTodos","fetch","then","response","json","todosJS","setTimeout","loading","OnChange","id","map","td","completed","console","log","removeItem","filter","addTodo","text","concat","name","Date","now","wrapper"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAIhB,MAAIC,KAAK,GAAG,EAAZ;;AAJgB,wBAMQP,KAAK,CAACE,QAAN,CAAeK,KAAf,CANR;AAAA;AAAA,MAMXC,KANW;AAAA,MAMJC,QANI;;AAAA,mBAUhBR,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAC,qDAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,OAAO,IAAI;AACfC,MAAAA,UAAU,CAAC,MAAM;AACfN,QAAAA,QAAQ,CAACK,OAAD,CAAR;AACD,OAFS,EAEP,IAFO,CAAV;AAID,KAPD;AAQD,GATQ,EASN,EATM,CAVO;AAAA;AAAA,MAQXE,OARW;;AAqBhB,MAAIC,QAAQ,GAAIC,EAAD,IAAQ;AACrBT,IAAAA,QAAQ,CACND,KAAK,CAACW,GAAN,CAAWC,EAAD,IAAQ;AAChB,UAAGA,EAAE,CAACF,EAAH,KAAUA,EAAb,EAAgB;AACdE,QAAAA,EAAE,CAACC,SAAH,GAAe,CAACD,EAAE,CAACC,SAAnB;AACD;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYH,EAAE,CAACC,SAAf;AACA,aAAOD,EAAP;AACD,KAND,CADM,CAAR;AASD,GAVD;;AAYA,MAAII,UAAU,GAAIN,EAAD,IAAO;AACtBT,IAAAA,QAAQ,CACND,KAAK,CAACiB,MAAN,CAAaL,EAAE,IAAIA,EAAE,CAACF,EAAH,KAAUA,EAA7B,CADM,CAAR;AAGD,GAJD;;AAMA,MAAIQ,OAAO,GAAIC,IAAD,IAAU;AACtBlB,IAAAA,QAAQ,CAACF,KAAK,CAACqB,MAAN,CAAa,CAAC;AACrBC,MAAAA,IAAI,EAAGF,IADc;AAErBT,MAAAA,EAAE,EAAEY,IAAI,CAACC,GAAL,EAFiB;AAGrBV,MAAAA,SAAS,EAAG;AAHS,KAAD,CAAb,CAAD,CAAR;AAKD,GAND;;AASA,SACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAACG,MAAAA,UAAD;AAAahB,MAAAA;AAAb,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAEL,KAAK,CAAC6B,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEN,OAAnB;AAA4B,IAAA,IAAI,EAAElB,KAAlC;AAAyC,IAAA,QAAQ,EAAES,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADA,CADF;AASD,CAzDD;;AA2DA,eAAeX,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport style from \"./App.module.css\"\nimport TodoList from './TodoList/TodoList';\nimport Context from './context'\n\nconst App = () => {\n\n  \n\n  let todos = []\n\n  let [Todos, SetTodos] = React.useState(todos)\n\n  let [loading] = \n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=6')\n    .then(response => response.json())\n    .then(todosJS => {\n      setTimeout(() => {\n        SetTodos(todosJS)\n      }, 2000);\n      \n    })\n  }, [])\n\n  let OnChange = (id) => {\n    SetTodos(\n      Todos.map((td) => {\n        if(td.id === id){\n          td.completed = !td.completed;\n        }\n        console.log(td.completed);\n        return td;\n      })\n    );\n  }\n\n  let removeItem = (id) =>{\n    SetTodos(\n      Todos.filter(td => td.id !== id  )\n      )\n  }\n\n  let addTodo = (text) => {\n    SetTodos(todos.concat([{\n      name : text,\n      id: Date.now(),\n      completed : false\n    }]))\n  }\n\n\n  return (\n    <Context.Provider value={{removeItem, Todos}}>\n    <div className={style.wrapper}>\n    \n      <TodoList addTodo={addTodo} todo={Todos} OnToggle={OnChange}/>\n      \n    </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}